{"version":3,"sources":["components/Footer.js","hooks/useOnEnter.js","containers/TodoItem.js","hooks/useDoubleClick.js","containers/TodoList.jsx","hooks/useInput.js","App/App.js","serviceWorker.js","hooks/useApi.js","index.js"],"names":["Footer","react_default","a","createElement","className","href","useOnEnter","callback","inputs","useCallback","event","key","preventDefault","TodoItem","props","_useState","useState","todo","label","_useState2","Object","slicedToArray","setLabel","_useState3","id","_useState4","_useState5","_useState6","editing","setEditing","urb","api","onDelete","num","poke","app","mark","json","remove-task","parseInt","onDone","mark-complete","handleViewClick","onClick","onDoubleClick","timeout","clicks","_len","arguments","length","rest","Array","_key","push","Date","getTime","clearTimeout","setTimeout","apply","concat","useDoubleClick","finishedCallback","console","log","edit-task","onEnter","ref","useRef","useOnClickOutside","done","type","checked","onChange","autoFocus","value","target","onKeyPress","TodoList","router","useRouter","todos","setLocalTodos","useEffect","subscribe","path","data","left","useMemo","reduce","p","c","visibleTodos","match","params","filter","i","anyDone","some","allSelected","every","onToggleAll","forEach","onClearCompleted","_useInput","defaultValue","setValue","useInput","_useInput2","newValue","onNewValueChange","setNewValue","onAddTodo","task","add-task","Fragment","placeholder","htmlFor","map","react_router","render","assign","react_router_dom","exact","to","activeClassName","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","useApi","memoize","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","Urbit","authenticate","ship","url","code","verbose","sent","abrupt","stop","this","root","document","getElementById","ReactDOM","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22949569.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"info\">\n      <p>Double-click to edit a todo</p>\n      <p>\n        Created by <a href=\"http://github.com/jacob-ebey/\">jacob-ebey</a>\n      </p>\n      <p>\n        Part of <a href=\"http://tudumvc.com\">tudumvc</a>\n      </p>\n      <p>\n        Modified for urbit by ~rabsef-bicrym\n      </p>\n    </footer>\n  );\n}\n","import { useCallback } from \"react\";\n\nexport default function useOnEnter(callback, inputs) {\n  return useCallback(event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      callback(event);\n    }\n  }, inputs);\n}\n","import React, { useCallback, useRef, useState } from \"react\";\nimport useOnClickOutside from \"use-onclickoutside\";\n\nimport useDoubleClick from \"../hooks/useDoubleClick\";\nimport useOnEnter from \"../hooks/useOnEnter\";\n\nexport default function TodoItem(props) {\n  const [label, setLabel] = useState(props.todo.label);\n  const [id, setID] = useState(props.todo.id);\n  const [editing, setEditing] = useState(false);\n\n  const urb = props.api\n\n  const deleteTodo = (num) => {\n    urb.poke({app: 'tudumvc', mark: 'tudumvc-action', json: {'remove-task': parseInt(num)}})\n  }\n\n  const toggleDone = (num) => {\n    urb.poke({app: 'tudumvc', mark: 'tudumvc-action', json: {'mark-complete': parseInt(num)}})\n  }\n\n  const onDelete = useCallback(() => deleteTodo(id), [id]);\n  const onDone = useCallback(() => toggleDone(id), [id]);\n  const onChange = event => {\n    setLabel(event.target.value);\n  }\n  const onBlur = () => {\n      console.log(`setting urbit state to ${label} for task ${id}`);\n      urb.poke({app: 'tudumvc', mark: 'tudumvc-action', json: {'edit-task': {'id': parseInt(id), 'label': label}}})\n    }\n\n  const handleViewClick = useDoubleClick(null, () => setEditing(true));\n  const finishedCallback = useCallback(\n    () => {\n      onBlur();\n      setEditing(false);\n    },\n    [label]\n  );\n\n  const onEnter = useOnEnter(finishedCallback, [label]);\n\n  const ref = useRef();\n  \n  useOnClickOutside(ref, finishedCallback);\n\n  return (\n    <li\n      onClick={handleViewClick}\n      className={`${editing ? \"editing\" : \"\"} ${props.todo.done ? \"completed\" : \"\"}`}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={props.todo.done}\n          onChange={onDone}\n          autoFocus={true}\n        />\n        <label>{label}</label>\n        <button className=\"destroy\" onClick={onDelete} />\n      </div>\n      {editing && (\n        <input\n          ref={ref}\n          className=\"edit\"\n          value={label}\n          id={id}\n          // On change needs to happen component local\n          // on blur needs to send to urbit\n          onChange={onChange}\n          onKeyPress={onEnter}\n        />\n      )}\n    </li>\n  );\n}\n","export default function useDoubleClick(onClick, onDoubleClick) {\n  let clicks = [];\n  let timeout;\n\n  return (event, ...rest) => {\n    clicks.push(new Date().getTime());\n\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      if (\n        clicks.length > 1 &&\n        clicks[clicks.length - 1] - clicks[clicks.length - 2] < 250\n      ) {\n        if (onDoubleClick) {\n          onDoubleClick(event, ...rest);\n        }\n      } else if (onClick) {\n        onClick(event, ...rest);\n      }\n      clicks = [];\n    }, 250);\n  };\n}\n","import React, { useCallback, useMemo, useState, useEffect } from \"react\";\nimport { NavLink, Route } from \"react-router-dom\";\nimport useRouter from \"use-react-router\";\n\nimport useInput from \"../hooks/useInput\";\nimport useOnEnter from \"../hooks/useOnEnter\";\nimport TodoItem from \"./TodoItem\";\n\nexport default function TodoList(props) {\n  const router = useRouter();\n\n  const [todos, setLocalTodos] = useState([]);\n\n  const urb = props.api\n\n  useEffect(() => { const sub = urb.subscribe({ app: 'tudumvc', path: '/mytasks', event: data => {\n    setLocalTodos(data);\n  }}, [todos, setLocalTodos])\n  }, [])\n\n  const setDone = 3\n  \n  const deleteTodo = (num) => {\n    urb.poke({app: 'tudumvc', mark: 'tudumvc-action', json: {'remove-task': num}})\n  }\n\n  const addTodo = (task) => {\n    urb.poke({app: 'tudumvc', mark: 'tudumvc-action', json: {'add-task': task}})\n  }\n  const pokeurb = event => {\n    urb.poke({app: 'tudumvc', mark: 'tudumvc-action', json: {'remove-task': {'num': parseInt('123'), 'label': 'abc'}}});\n  }\n\n  const left = useMemo(() => todos.reduce((p, c) => p + (c.done ? 0 : 1), 0), [\n    todos\n  ]);\n\n  const visibleTodos = useMemo(\n    () =>\n      router.match.params.filter\n        ? todos.filter(i =>\n            router.match.params.filter === \"active\" ? !i.done : i.done\n          )\n        : todos,\n    [todos, router.match.params.filter]\n  );\n\n  const anyDone = useMemo(() => todos.some(i => i.done), [todos]);\n  const allSelected = useMemo(() => visibleTodos.every(i => i.done), [\n    visibleTodos\n  ]);\n\n  const onToggleAll = useCallback(\n    () => {\n      visibleTodos.forEach(i => setDone(i.id, !allSelected));\n    },\n    [visibleTodos, allSelected]\n  );\n\n  const onClearCompleted = useCallback(\n    () => {\n      todos.forEach(i => {\n        if (i.done) {\n          deleteTodo(i.id);\n        }\n      });\n    },\n    [todos]\n  );\n\n  const [newValue, onNewValueChange, setNewValue] = useInput();\n  const onAddTodo = useOnEnter(\n    () => {\n      if (newValue) {\n        addTodo(newValue);\n        setNewValue(\"\");\n      }\n    },\n    [newValue]\n  );\n\n  const {api} = props;\n  return (\n    <React.Fragment>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onKeyPress={onAddTodo}\n          value={newValue}\n          onChange={onNewValueChange}\n        />\n      </header>\n\n      <section className=\"main\">\n        <input\n          id=\"toggle-all\"\n          type=\"checkbox\"\n          className=\"toggle-all\"\n          checked={allSelected}\n          onChange={onToggleAll}\n        />\n        <label htmlFor=\"toggle-all\" />\n        <ul className=\"todo-list\">\n          {visibleTodos && visibleTodos.map(todo => (\n            // Each item is an instance of Route and wants\n            // a key\n            <Route key={`todoItem-${todo.id}`} render={(props) => {\n              console.log(`todoItem-${todo.id}`);\n              return <TodoItem todo={todo} api={api} {...props}/>\n            }} />\n          ))}\n        </ul>\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{left}</strong> items left\n        </span>\n        <ul className=\"filters\">\n          <li>\n            <NavLink exact={true} to=\"/\" activeClassName=\"selected\">\n              All\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/active\" activeClassName=\"selected\">\n              Active\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/completed\" activeClassName=\"selected\">\n              Completed\n            </NavLink>\n          </li>\n        </ul>\n        {anyDone && (\n          <button className=\"clear-completed\" onClick={onClearCompleted}>\n            Clear completed\n          </button>\n        )}\n      </footer>\n    </React.Fragment>\n  );\n}","import { useCallback, useState } from \"react\";\n\nexport default function useInput(defaultValue) {\n  const [value, setValue] = useState(defaultValue || \"\");\n\n  const onChange = useCallback(event => {\n    setValue(event.target.value);\n  });\n\n  return [value, onChange, setValue];\n}\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"tudumvc-app-css/index.css\";\n\nimport Footer from \"../components/Footer\";\nimport TodoList from \"../containers/TodoList\";\n\nexport default function App(props) {\n  const { api } = props;\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <div className=\"todoapp\">\n          <Route key=\"my-route\" path=\"/:filter?\" render={(props) => {\n            return <TodoList api={api} {...props} />\n          }} />\n        </div>\n        <Footer />\n      </React.Fragment>\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Urbit from \"@urbit/http-api\";\nimport { memoize } from 'lodash';\n\n// Memoize records (for the session) the information retrieved from Urbit.authenticate\n// which is the return of the promise of authentication; basically an API token that we\n// can use later for poke and subscribe actions\n//\nconst useApi = memoize(async () => {\n    const urb = await Urbit.authenticate({ ship: 'nus', url: '138.197.192.56:8080', code: 'bortem-pinwyl-macnyx-topdeg', verbose: true});\n    return urb;\n});\n\nexport default useApi;","import \"core-js/es6/map\";\nimport \"core-js/es6/set\";\nimport \"raf/polyfill\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport useApi from \"./hooks/useApi\";\n\nconst root = document.getElementById(\"root\");\n\n// We need to make the React.DOM asynchronously await the completion\n// of the promise of useApi (defined in useApi.js)\n//\n(async () => {\n    const api = await useApi();\n    ReactDOM.render(<App api={api} />, root);\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}